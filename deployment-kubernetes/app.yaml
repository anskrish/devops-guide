apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-dev
  namespace: apps
  labels:
    app: app-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-dev
  template:
    metadata:
      labels:
        app: app-dev
    spec:
      containers:
      - name: app-dev
        image: 12322.dkr.ecr.us-east-1.amazonaws.com/krishna-app/app:v1
        imagePullPolicy: Always
        env:
          - name: PORT
            valueFrom:
              configMapKeyRef:
                name: app-service-dev
                key: PORT
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: app-service-dev
                key: POSTGRES_USERNAME
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: app-service-dev
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: app-service-dev
                key: POSTGRES_DB
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: app-service-dev
                key: POSTGRES_HOSTNAME
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: app-service-dev
                key: POSTGRES_PORT
          - name: JWT_SECRET_KEY
            valueFrom:
              configMapKeyRef:
                name: app-service-dev
                key: JWT_SECRET_KEY
          - name: FRONT_END_BASE_URL
            valueFrom:
              configMapKeyRef:
                name: app-service-dev
                key: FRONT_END_BASE_URL
          - name: SCHEDULER_BASE_URL
            valueFrom:
              configMapKeyRef:
                name: app-service-dev
                key: SCHEDULER_BASE_URL
          - name: HASURA_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: app-service-dev
                key: HASURA_ENDPOINT
        resources:
          limits:
            cpu: "1"
            memory: "500Mi"
          requests:
            cpu: "0.5"
            memory: "200Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 3
        ports:
        - containerPort: 3000
    
---

apiVersion: v1
kind: Service
metadata:
  name: app-dev
  namespace: apps
spec:
  selector:
    app: app-dev
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      name: http
    - protocol: TCP
      port: 443
      targetPort: 3000
      name: https

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: app-dev
  namespace: apps
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: app-dev
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 50

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-dev
  namespace: apps
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: app.service.dev.krishna.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app-dev
            port:
              number: 80
